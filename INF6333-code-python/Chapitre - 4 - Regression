{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1U11HITYI3RHrnu7MFaDnulzMBdtn0L1_","timestamp":1733712594004}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"CL5OlQqeJxTz"},"source":["###**Chapitre 4 :  Regression **  Entrainement d'un modèle de régression en utilisant les SVM avec le jeu données (California housing dataset)."]},{"cell_type":"markdown","metadata":{"id":"ywY_hdVjKA6D"},"source":["Entrainement d'un modèle de régression en utilisant les SVM avec le jeu données (California housing dataset)."]},{"cell_type":"markdown","metadata":{"id":"O5o1UWb8KpW6"},"source":["1. Télécharger le jeu de données \"California housing\" avec la bibliothèque scikit-learn."]},{"cell_type":"code","metadata":{"id":"_VgpI80bKs2p"},"source":["from sklearn.datasets import fetch_california_housing\n","\n","housing = fetch_california_housing()\n","X = housing[\"data\"]\n","y = housing[\"target\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["housing"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P8Oo7udaDHH0","executionInfo":{"status":"ok","timestamp":1675700727915,"user_tz":300,"elapsed":527,"user":{"displayName":"Naklan Julien Camara","userId":"15083636647543266144"}},"outputId":"b129303d-6694-401b-ca07-90a6732e5acb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'data': array([[   8.3252    ,   41.        ,    6.98412698, ...,    2.55555556,\n","           37.88      , -122.23      ],\n","        [   8.3014    ,   21.        ,    6.23813708, ...,    2.10984183,\n","           37.86      , -122.22      ],\n","        [   7.2574    ,   52.        ,    8.28813559, ...,    2.80225989,\n","           37.85      , -122.24      ],\n","        ...,\n","        [   1.7       ,   17.        ,    5.20554273, ...,    2.3256351 ,\n","           39.43      , -121.22      ],\n","        [   1.8672    ,   18.        ,    5.32951289, ...,    2.12320917,\n","           39.43      , -121.32      ],\n","        [   2.3886    ,   16.        ,    5.25471698, ...,    2.61698113,\n","           39.37      , -121.24      ]]),\n"," 'target': array([4.526, 3.585, 3.521, ..., 0.923, 0.847, 0.894]),\n"," 'frame': None,\n"," 'target_names': ['MedHouseVal'],\n"," 'feature_names': ['MedInc',\n","  'HouseAge',\n","  'AveRooms',\n","  'AveBedrms',\n","  'Population',\n","  'AveOccup',\n","  'Latitude',\n","  'Longitude'],\n"," 'DESCR': '.. _california_housing_dataset:\\n\\nCalifornia Housing dataset\\n--------------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 20640\\n\\n    :Number of Attributes: 8 numeric, predictive attributes and the target\\n\\n    :Attribute Information:\\n        - MedInc        median income in block group\\n        - HouseAge      median house age in block group\\n        - AveRooms      average number of rooms per household\\n        - AveBedrms     average number of bedrooms per household\\n        - Population    block group population\\n        - AveOccup      average number of household members\\n        - Latitude      block group latitude\\n        - Longitude     block group longitude\\n\\n    :Missing Attribute Values: None\\n\\nThis dataset was obtained from the StatLib repository.\\nhttps://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html\\n\\nThe target variable is the median house value for California districts,\\nexpressed in hundreds of thousands of dollars ($100,000).\\n\\nThis dataset was derived from the 1990 U.S. census, using one row per census\\nblock group. A block group is the smallest geographical unit for which the U.S.\\nCensus Bureau publishes sample data (a block group typically has a population\\nof 600 to 3,000 people).\\n\\nAn household is a group of people residing within a home. Since the average\\nnumber of rooms and bedrooms in this dataset are provided per household, these\\ncolumns may take surpinsingly large values for block groups with few households\\nand many empty houses, such as vacation resorts.\\n\\nIt can be downloaded/loaded using the\\n:func:`sklearn.datasets.fetch_california_housing` function.\\n\\n.. topic:: References\\n\\n    - Pace, R. Kelley and Ronald Barry, Sparse Spatial Autoregressions,\\n      Statistics and Probability Letters, 33 (1997) 291-297\\n'}"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eQnONvlJC4nl","executionInfo":{"status":"ok","timestamp":1676100512814,"user_tz":300,"elapsed":182,"user":{"displayName":"Naklan Julien Camara","userId":"15083636647543266144"}},"outputId":"5ad76fb7-655f-44c5-ec89-652e4db58c0f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[   8.3252    ,   41.        ,    6.98412698, ...,    2.55555556,\n","          37.88      , -122.23      ],\n","       [   8.3014    ,   21.        ,    6.23813708, ...,    2.10984183,\n","          37.86      , -122.22      ],\n","       [   7.2574    ,   52.        ,    8.28813559, ...,    2.80225989,\n","          37.85      , -122.24      ],\n","       ...,\n","       [   1.7       ,   17.        ,    5.20554273, ...,    2.3256351 ,\n","          39.43      , -121.22      ],\n","       [   1.8672    ,   18.        ,    5.32951289, ...,    2.12320917,\n","          39.43      , -121.32      ],\n","       [   2.3886    ,   16.        ,    5.25471698, ...,    2.61698113,\n","          39.37      , -121.24      ]])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9leam3lgDPzc","executionInfo":{"status":"ok","timestamp":1676100513735,"user_tz":300,"elapsed":2,"user":{"displayName":"Naklan Julien Camara","userId":"15083636647543266144"}},"outputId":"ba3f9d93-7fb2-474f-875e-b176f9a7ca15"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([4.526, 3.585, 3.521, ..., 0.923, 0.847, 0.894])"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","metadata":{"id":"mNlDvFjuKtq2"},"source":["2. Diviser le jeu de données en données d'entraînement (80%) et données de test (20%)."]},{"cell_type":"code","metadata":{"id":"zAR1K68pKu7N"},"source":["#Faire le split avec la fonction 'train_test_split'\n","from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"I3z_pvWcKyIN"},"source":["3. Normaliser les données d'entraînement et de test."]},{"cell_type":"code","metadata":{"id":"6vggqGuRKzOs"},"source":["# Normaliser avec la fonction 'StandardScaler'\n","from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zoTdC8VsNEN-"},"source":["4. Construire puis entraîner les données avec les SVM linéaires.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0RXpuSxtNOO9","executionInfo":{"status":"ok","timestamp":1676100524372,"user_tz":300,"elapsed":894,"user":{"displayName":"Naklan Julien Camara","userId":"15083636647543266144"}},"outputId":"4149650a-54c5-4ae1-fc29-01f87a2d94ef"},"source":["#Construire puis entraîner les données avec les SVM linéaires\n","from sklearn.svm import LinearSVR\n","\n","lin_svr = LinearSVR()\n","lin_svr.fit(X_train_scaled, y_train)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/svm/_base.py:1206: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["LinearSVR()"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"rN-x90NEK4Jg"},"source":["5. Mesurer l'erreur du modèle trouvé."]},{"cell_type":"code","metadata":{"id":"tU4tj8h6K5RR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676100530007,"user_tz":300,"elapsed":148,"user":{"displayName":"Naklan Julien Camara","userId":"15083636647543266144"}},"outputId":"490f8188-7680-4f6b-9e21-9d7e3edd95b2"},"source":["#Mesurer l'erreur du modèle trouvé.\n","from sklearn.metrics import mean_squared_error\n","import numpy as np\n","\n","y_pred = lin_svr.predict(X_train_scaled)\n","mse = mean_squared_error(y_train, y_pred)\n","\n","rmse = np.sqrt(mse)\n","print(rmse)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.979214815469207\n"]}]}]}